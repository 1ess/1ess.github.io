<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A Sort Of A Blog</title>
  
  
  <link href="https://1ess.github.io/atom.xml" rel="self"/>
  
  <link href="https://1ess.github.io/"/>
  <updated>2021-07-14T13:11:14.324Z</updated>
  <id>https://1ess.github.io/</id>
  
  <author>
    <name>Stephen Chang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/C#(%E5%8D%81%E4%B8%89)/"/>
    <id>https://1ess.github.io/C#(%E5%8D%81%E4%B8%89)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们看看 C# 中的枚举器和迭代器的基本概念。&lt;br&gt;之前我们说过可以使用 foreach 来遍历数组元素，本篇来讨论为什么数组可以使用 foreach 语句处理，我们可以还使用迭代器来使得自定义类型也可以使用 foreach。&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/C#(%E5%8D%81%E5%9B%9B)/"/>
    <id>https://1ess.github.io/C#(%E5%8D%81%E5%9B%9B)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，讲讲 LINQ。&lt;br&gt;LINQ(发音同 link，不要读成 lin-q)代表语言集成查询(Language Integrated Query)，他是 .Net 的扩展，允许我们很轻松的操作对象集合。&lt;br&gt;LINQ 的出现也就意味着允许我们在 C#</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/C#(%E5%8D%81%E4%BA%94)/"/>
    <id>https://1ess.github.io/C#(%E5%8D%81%E4%BA%94)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们讲讲 C# 网络编程中比较重要的概念 —— 异步。&lt;/p&gt;
&lt;h3 id=&quot;什么是异步&quot;&gt;&lt;a href=&quot;#什么是异步&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/C#(%E5%8D%81%E5%85%AD)/"/>
    <id>https://1ess.github.io/C#(%E5%8D%81%E5%85%AD)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们讲讲 C# 中的异常处理 —— try、catch、finially。&lt;/p&gt;
&lt;h3 id=&quot;什么是异常&quot;&gt;&lt;a href=&quot;#什么是异常&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/C#(%E5%8D%81%E4%B8%83)/"/>
    <id>https://1ess.github.io/C#(%E5%8D%81%E4%B8%83)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，介绍一些 C# 中的比较常见的预处理指令。&lt;/p&gt;
&lt;p&gt;C 和 C++ 都有实际的预处理阶段，而在 C# 中是没有的，预处理指令是由编译器来处理。&lt;br&gt;在 Objective-C 中预处理指令也特别常用。&lt;/p&gt;
&lt;h3 id=&quot;基本规则&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/C#(%E5%8D%81%E5%85%AB)/"/>
    <id>https://1ess.github.io/C#(%E5%8D%81%E5%85%AB)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们讲讲 C# 中非常重要的概念 —— 反射和特性。&lt;/p&gt;
&lt;h3 id=&quot;元数据&quot;&gt;&lt;a href=&quot;#元数据&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/%E8%81%8A%E8%81%8A%E6%9C%80%E8%BF%91%EF%BC%8C%E8%81%8A%E8%81%8A%E7%94%9F%E6%B4%BB/"/>
    <id>https://1ess.github.io/%E8%81%8A%E8%81%8A%E6%9C%80%E8%BF%91%EF%BC%8C%E8%81%8A%E8%81%8A%E7%94%9F%E6%B4%BB/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇聊聊最近的生活吧。&lt;/p&gt;
&lt;h3 id=&quot;工作&quot;&gt;&lt;a href=&quot;#工作&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/%E7%BC%96%E7%A8%8B%E4%B8%89%E5%B9%B4/"/>
    <id>https://1ess.github.io/%E7%BC%96%E7%A8%8B%E4%B8%89%E5%B9%B4/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;写这篇文章，也算是给自己毕业三年的编程生涯做个总结。&lt;br&gt;时间如白驹过隙，满打满算毕业也已经三年有余，也早就想写一篇文章来回忆一下自己毕业后的工作生活。&lt;/p&gt;
&lt;h3 id=&quot;南下&quot;&gt;&lt;a href=&quot;#南下&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E4%B8%80)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E4%B8%80)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;从这篇开始，我们来谈谈 ASP.Net MVC，我们将会介绍 ASP.Net MVC 的方方面面(包括基础以及高级特性)。&lt;/p&gt;
&lt;h2 id=&quot;MVC-架构&quot;&gt;&lt;a href=&quot;#MVC-架构&quot; class=&quot;headerlink&quot; title=&quot;MVC</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E4%BA%8C)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E4%BA%8C)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们来详细讲讲关于 ASP.Net MVC 中的路由。&lt;/p&gt;
&lt;h2 id=&quot;ASP-Net-MVC-中的路由&quot;&gt;&lt;a href=&quot;#ASP-Net-MVC-中的路由&quot; class=&quot;headerlink&quot; title=&quot;ASP.Net MVC</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E4%B8%89)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E4%B8%89)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们具体说说 Controller、Model 和 View。&lt;/p&gt;
&lt;h2 id=&quot;Controller&quot;&gt;&lt;a href=&quot;#Controller&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E5%9B%9B)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E5%9B%9B)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们来详细说说 ASP.Net MVC 中特别重要的 Model Binding。&lt;/p&gt;
&lt;p&gt;传统的 ASP.Net MVC 中，如果我们想在 Action 方法中获取请求参数，我们使用 Request.QueryString 和 Request</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E4%BA%94)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E4%BA%94)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们再来详细说说 ASP.Net MVC 中的 Razor 语法。&lt;/p&gt;
&lt;h3 id=&quot;什么是-Razor&quot;&gt;&lt;a href=&quot;#什么是-Razor&quot; class=&quot;headerlink&quot; title=&quot;什么是 Razor&quot;&gt;&lt;/a&gt;什么是</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E5%85%AD)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E5%85%AD)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们详细讲讲 .Net MVC 中的 HTML Helper。&lt;/p&gt;
&lt;p&gt;HtmlHelper 类使用模型类对象生成 html 元素。它将模型对象绑定到 html 元素，以将模型属性的值显示为 html 元素，并在提交 Web 表单时将 html</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E4%B8%83)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E4%B8%83)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们讲讲数据验证、布局试图以及 Controller 向 View 传递少量数据的方式。&lt;/p&gt;
&lt;h2 id=&quot;数据注释-DataAnnotations&quot;&gt;&lt;a href=&quot;#数据注释-DataAnnotations&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E5%85%AB)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E5%85%AB)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们详细讲讲 .Net MVC 中的 Filter。&lt;/p&gt;
&lt;p&gt;默认情况，在 ASP.NET MVC 中，用户请求被路由到适当的控制器和 Action 方法。&lt;br&gt;但是，在某些情况下，您可能希望在执行 Action 方法之前或之后执行某些逻辑。ASP.NET</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E4%B9%9D)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E4%B9%9D)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们详细讲讲 .Net MVC 中的 Bundling 和 Minification。&lt;/p&gt;
&lt;h2 id=&quot;Bundling&quot;&gt;&lt;a href=&quot;#Bundling&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E5%8D%81)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E5%8D%81)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们详细讲讲 ASP.Net MVC 中的 Area。&lt;/p&gt;
&lt;p&gt;我们知道在大型应用程序可以包含大量控制器、视图和模型类，因此，使用默认的 ASP.NET MVC 项目结构维护大量视图、模型和控制器可能变得难以管理。&lt;/p&gt;
&lt;p&gt;ASP.NET MVC 2</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20API(%E4%B8%80)/"/>
    <id>https://1ess.github.io/ASP.Net%20API(%E4%B8%80)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;ASP.Net Web MVC 的知识我们也复习了大概，基础内容已经覆盖了大部分，从本篇开始，我们来认识一下 ASP.Net Web API。&lt;/p&gt;
&lt;h2 id=&quot;Web-API-是什么&quot;&gt;&lt;a href=&quot;#Web-API-是什么&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20API(%E4%BA%8C)/"/>
    <id>https://1ess.github.io/ASP.Net%20API(%E4%BA%8C)/</id>
    <published>2021-07-14T13:11:14.324Z</published>
    <updated>2021-07-14T13:11:14.324Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;之前我们说过 Web MVC 中的路由，本篇，我们看看如何配置 Web API 路由。&lt;/p&gt;
&lt;p&gt;Web API 路由类似于 ASP.NET MVC 路由。它将传入的 HTTP 请求路由到 Web API Controller 上的特定 Action</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
