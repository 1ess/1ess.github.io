<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A Sort Of A Blog</title>
  
  
  <link href="https://1ess.github.io/atom.xml" rel="self"/>
  
  <link href="https://1ess.github.io/"/>
  <updated>2021-08-11T10:34:08.363Z</updated>
  <id>https://1ess.github.io/</id>
  
  <author>
    <name>Stephen Chang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>出差</title>
    <link href="https://1ess.github.io/%E5%87%BA%E5%B7%AE/"/>
    <id>https://1ess.github.io/%E5%87%BA%E5%B7%AE/</id>
    <published>2021-07-11T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;苏州&quot;&gt;&lt;a href=&quot;#苏州&quot; class=&quot;headerlink&quot; title=&quot;苏州&quot;&gt;&lt;/a&gt;苏州&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;京杭大运河&quot;&gt;&lt;a href=&quot;#京杭大运河&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>大连之行</title>
    <link href="https://1ess.github.io/%E5%A4%A7%E8%BF%9E%E4%B9%8B%E8%A1%8C/"/>
    <id>https://1ess.github.io/%E5%A4%A7%E8%BF%9E%E4%B9%8B%E8%A1%8C/</id>
    <published>2021-05-06T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;大连&quot;&gt;&lt;a href=&quot;#大连&quot; class=&quot;headerlink&quot; title=&quot;大连&quot;&gt;&lt;/a&gt;大连&lt;/h3&gt;&lt;hr&gt;
&lt;h3 id=&quot;金石滩&quot;&gt;&lt;a href=&quot;#金石滩&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>乌鸦 乌鸦 叫</title>
    <link href="https://1ess.github.io/%E4%B9%8C%E9%B8%A6%20%E4%B9%8C%E9%B8%A6%20%E5%8F%AB/"/>
    <id>https://1ess.github.io/%E4%B9%8C%E9%B8%A6%20%E4%B9%8C%E9%B8%A6%20%E5%8F%AB/</id>
    <published>2021-04-06T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;写以上文字起因于一位武汉大学玩友的来信。他在信中痛责《GAME</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2021 基金基础知识及投资策略</title>
    <link href="https://1ess.github.io/2021%20%E5%9F%BA%E9%87%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%8F%8A%E6%8A%95%E8%B5%84%E7%AD%96%E7%95%A5/"/>
    <id>https://1ess.github.io/2021%20%E5%9F%BA%E9%87%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%8F%8A%E6%8A%95%E8%B5%84%E7%AD%96%E7%95%A5/</id>
    <published>2021-03-15T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;因为疫情等黑天鹅事件，全球经历货币大放水，而我国由于疫情控制出色以及对楼市的管控，资金大量进入股市，基本上每个最近两年入市的基民都有不错的收益。但是随着疫情明朗以及我国货币收紧，大盘也已经到了 3600</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构 From Zero To Hero(八)</title>
    <link href="https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E5%85%AB)/"/>
    <id>https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E5%85%AB)/</id>
    <published>2021-03-03T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们要来介绍计算机科学中第二个非常重要的非线性存储结构 —— 图(Graph)。&lt;/p&gt;
&lt;h3 id=&quot;What-are-Graphs&quot;&gt;&lt;a href=&quot;#What-are-Graphs&quot; class=&quot;headerlink&quot; title=&quot;What are</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构 From Zero To Hero(七)</title>
    <link href="https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E4%B8%83)/"/>
    <id>https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E4%B8%83)/</id>
    <published>2021-03-01T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;之前几篇，我们介绍的都是线性存储结构，从本篇开始，我们要来介绍计算机科学中两个非常重要的非线性存储结构，其中之一就是本篇的重点 —— 树(Tree)。&lt;/p&gt;
&lt;h3 id=&quot;二叉树-Binary-Tree&quot;&gt;&lt;a href=&quot;#二叉树-Binary-Tree&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构 From Zero To Hero(六)</title>
    <link href="https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E5%85%AD)/"/>
    <id>https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E5%85%AD)/</id>
    <published>2021-02-27T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们介绍一种用于超快检索的数据结构 —— 哈希表(Hash Tables)或者称为字典(Dictionary)。&lt;/p&gt;
&lt;p&gt;几乎所有的编程语言都有对应的实现，例如 Java 中的 HashMap、JavaScript 中的 Object、C# 中的</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构 From Zero To Hero(五)</title>
    <link href="https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E4%BA%94)/"/>
    <id>https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E4%BA%94)/</id>
    <published>2021-02-22T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们介绍另一种利用线性表创建的一种数据结构 —— 队列(Queues)。&lt;/p&gt;
&lt;p&gt;队列在我们日常工作中也经常使用，例如打印机、操作系统等。&lt;/p&gt;
&lt;h3 id=&quot;Reversing-a-Queue&quot;&gt;&lt;a href=&quot;#Reversing-a-Queue&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构 From Zero To Hero(四)</title>
    <link href="https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E5%9B%9B)/"/>
    <id>https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E5%9B%9B)/</id>
    <published>2021-02-19T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们介绍一种利用线性表创建的一种数据结构 —— 栈(Stacks)。&lt;/p&gt;
&lt;p&gt;只要我们遇到回滚或者反转之类的问题，我们就可以使用栈来解决。&lt;/p&gt;
&lt;h3 id=&quot;Reversing-a-String&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构 From Zero To Hero(三)</title>
    <link href="https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E4%B8%89)/"/>
    <id>https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E4%B8%89)/</id>
    <published>2021-02-15T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们来介绍除了数组之外另一种线性结构 ——</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构 From Zero To Hero(二)</title>
    <link href="https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E4%BA%8C)/"/>
    <id>https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E4%BA%8C)/</id>
    <published>2021-02-12T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们来介绍最基础、最简单的一种线性结构 —— 数组(Array)。&lt;/p&gt;
&lt;p&gt;数组用来保存一系列的数据，这些数据都是按顺序存储在内存中。&lt;/p&gt;
&lt;p&gt;我们知道，在很多语言中，数组大小都是初始固定、无法修改的，现在我们使用 C#</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构 From Zero To Hero(一)</title>
    <link href="https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E4%B8%80)/"/>
    <id>https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20From%20Zero%20To%20Hero(%E4%B8%80)/</id>
    <published>2021-02-07T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇开始，我们重新学习一下数据结构。这次，不仅仅是概念上的学习，而且会使用代码来实现每个数据结构以及对应的常用操作。&lt;/p&gt;
&lt;h2 id=&quot;Big-O-Natation&quot;&gt;&lt;a href=&quot;#Big-O-Natation&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Git(二)</title>
    <link href="https://1ess.github.io/Git(%E4%BA%8C)/"/>
    <id>https://1ess.github.io/Git(%E4%BA%8C)/</id>
    <published>2021-01-29T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们来介绍一下 Git 的历史记录的浏览查看以及分支的基本操作。&lt;/p&gt;
&lt;h3 id=&quot;Restore-a-Deleted-File&quot;&gt;&lt;a href=&quot;#Restore-a-Deleted-File&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Git(一)</title>
    <link href="https://1ess.github.io/Git(%E4%B8%80)/"/>
    <id>https://1ess.github.io/Git(%E4%B8%80)/</id>
    <published>2021-01-25T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;版本控制是软件开发中必不可少的工具，本篇，我们来介绍目前最流行的版本控制系统 —— Git。&lt;/p&gt;
&lt;h2 id=&quot;Configuring-Git&quot;&gt;&lt;a href=&quot;#Configuring-Git&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Oracle 数据库拾遗(四)</title>
    <link href="https://1ess.github.io/Oracle%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%BE%E9%81%97(%E5%9B%9B)/"/>
    <id>https://1ess.github.io/Oracle%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%BE%E9%81%97(%E5%9B%9B)/</id>
    <published>2021-01-21T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前面介绍的 SELECT 查询语句都是只有一个 SELECT-FROM-WHERE 形式的语句块，本篇再来看看子查询。&lt;/p&gt;
&lt;h3 id=&quot;返回单行的子查询&quot;&gt;&lt;a href=&quot;#返回单行的子查询&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Oracle 数据库拾遗(三)</title>
    <link href="https://1ess.github.io/Oracle%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%BE%E9%81%97(%E4%B8%89)/"/>
    <id>https://1ess.github.io/Oracle%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%BE%E9%81%97(%E4%B8%89)/</id>
    <published>2021-01-17T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前面的实例介绍了 SELECT 语句的简单应用，即简单查询。在实际应用中，对一个基本表或视图做简单查询是比较少的，大多情况下都要求对数据表进行筛选、分组或排序，这就需要用到高级查询。&lt;/p&gt;
&lt;h3 id=&quot;使用-GROUP-BY-子句实现分组&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Oracle 数据库拾遗(二)</title>
    <link href="https://1ess.github.io/Oracle%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%BE%E9%81%97(%E4%BA%8C)/"/>
    <id>https://1ess.github.io/Oracle%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%BE%E9%81%97(%E4%BA%8C)/</id>
    <published>2021-01-12T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前面一章介绍的是表结构的操作，本章开始讲解表数据的操作。之前我们已经说过很多有关 SQL 查询的知识。本篇主要讲一下 Oracle 与其他数据库不一样的地方。&lt;/p&gt;
&lt;p&gt;本篇我们使用的 student 表数据结构如下:</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Oracle 数据库拾遗(一)</title>
    <link href="https://1ess.github.io/Oracle%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%BE%E9%81%97(%E4%B8%80)/"/>
    <id>https://1ess.github.io/Oracle%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%BE%E9%81%97(%E4%B8%80)/</id>
    <published>2021-01-09T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;由于目前工作需要使用 Oracle 数据库，准备来看一下 PL/SQL 对标准 SQL 进行了那些补充。&lt;br&gt;在 ANSI/ISO SQL 标准中，SQL 语句可以分为 DDL(数据定义)、DML(数据操作)和</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>HCIP(三)</title>
    <link href="https://1ess.github.io/HCIP(%E4%B8%89)/"/>
    <id>https://1ess.github.io/HCIP(%E4%B8%89)/</id>
    <published>2020-12-21T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;上篇，我们介绍了一下如何在华为路由器配置静态路由。本篇，我们介绍一下现实生活中最常用的动态路由 —— OSPF。&lt;/p&gt;
&lt;h2 id=&quot;动态路由&quot;&gt;&lt;a href=&quot;#动态路由&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>HCIP(二)</title>
    <link href="https://1ess.github.io/HCIP(%E4%BA%8C)/"/>
    <id>https://1ess.github.io/HCIP(%E4%BA%8C)/</id>
    <published>2020-12-18T00:00:00.000Z</published>
    <updated>2021-08-11T10:34:08.363Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们来介绍一下静态路由以及如何在华为设备配置静态路由。&lt;/p&gt;
&lt;h2 id=&quot;静态路由&quot;&gt;&lt;a href=&quot;#静态路由&quot; class=&quot;headerlink&quot; title=&quot;静态路由&quot;&gt;&lt;/a&gt;静态路由&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;何时使用&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
