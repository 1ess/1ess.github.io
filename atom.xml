<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A Sort Of A Blog</title>
  
  
  <link href="https://1ess.github.io/atom.xml" rel="self"/>
  
  <link href="https://1ess.github.io/"/>
  <updated>2021-07-14T13:14:49.274Z</updated>
  <id>https://1ess.github.io/</id>
  
  <author>
    <name>Stephen Chang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E4%B8%83)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E4%B8%83)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们讲讲数据验证、布局试图以及 Controller 向 View 传递少量数据的方式。&lt;/p&gt;
&lt;h2 id=&quot;数据注释-DataAnnotations&quot;&gt;&lt;a href=&quot;#数据注释-DataAnnotations&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E5%85%AB)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E5%85%AB)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们详细讲讲 .Net MVC 中的 Filter。&lt;/p&gt;
&lt;p&gt;默认情况，在 ASP.NET MVC 中，用户请求被路由到适当的控制器和 Action 方法。&lt;br&gt;但是，在某些情况下，您可能希望在执行 Action 方法之前或之后执行某些逻辑。ASP.NET</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E4%B9%9D)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E4%B9%9D)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们详细讲讲 .Net MVC 中的 Bundling 和 Minification。&lt;/p&gt;
&lt;h2 id=&quot;Bundling&quot;&gt;&lt;a href=&quot;#Bundling&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20MVC(%E5%8D%81)/"/>
    <id>https://1ess.github.io/ASP.Net%20MVC(%E5%8D%81)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一篇，我们详细讲讲 ASP.Net MVC 中的 Area。&lt;/p&gt;
&lt;p&gt;我们知道在大型应用程序可以包含大量控制器、视图和模型类，因此，使用默认的 ASP.NET MVC 项目结构维护大量视图、模型和控制器可能变得难以管理。&lt;/p&gt;
&lt;p&gt;ASP.NET MVC 2</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20API(%E4%B8%80)/"/>
    <id>https://1ess.github.io/ASP.Net%20API(%E4%B8%80)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;ASP.Net Web MVC 的知识我们也复习了大概，基础内容已经覆盖了大部分，从本篇开始，我们来认识一下 ASP.Net Web API。&lt;/p&gt;
&lt;h2 id=&quot;Web-API-是什么&quot;&gt;&lt;a href=&quot;#Web-API-是什么&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20API(%E4%BA%8C)/"/>
    <id>https://1ess.github.io/ASP.Net%20API(%E4%BA%8C)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;之前我们说过 Web MVC 中的路由，本篇，我们看看如何配置 Web API 路由。&lt;/p&gt;
&lt;p&gt;Web API 路由类似于 ASP.NET MVC 路由。它将传入的 HTTP 请求路由到 Web API Controller 上的特定 Action</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20API(%E4%B8%89)/"/>
    <id>https://1ess.github.io/ASP.Net%20API(%E4%B8%89)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;了解了 Web API 如何将 HTTP 请求路由到 Controller 和 Action 方法。我们将再看看 Web API 如何将 HTTP 请求数据绑定到操作方法的参数。&lt;/p&gt;
&lt;h2 id=&quot;Model-Binding&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/ASP.Net%20API(%E5%9B%9B)/"/>
    <id>https://1ess.github.io/ASP.Net%20API(%E5%9B%9B)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们讲讲 Web API 如何处理不同格式的请求和响应数据。&lt;/p&gt;
&lt;p&gt;Web API 包括对 JSON，XML，BSON 和 form-urlencoded 数据的内置支持，这意味着它会自动将请求/响应数据转换为这些格式(开箱即用)。&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/%E9%97%B2%E8%81%8A/"/>
    <id>https://1ess.github.io/%E9%97%B2%E8%81%8A/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;你们这伙没胆量的下流东西！不要跑！来跟你们厮杀的只是个单枪匹马的骑士！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一周多没更新 Blog 了，主要是最近又开始有些忙碌。&lt;/p&gt;
&lt;h3 id=&quot;工作&quot;&gt;&lt;a href=&quot;#工作&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E6%9C%89%E6%84%9F/"/>
    <id>https://1ess.github.io/%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E6%9C%89%E6%84%9F/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近公司准备开发微信小程序，之前也研究过一段时间，写过几个 Demo，感觉原生开发有些笨重，决定调研一些开源框架来加速开发，因为自己熟悉 React，经过对比，决定采用京东开源的 &lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/%E8%A3%85%E4%BF%AE/"/>
    <id>https://1ess.github.io/%E8%A3%85%E4%BF%AE/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;西风吹老洞庭波，一夜湘君白发多。&lt;br&gt;醉后不知天在水，满船清梦压星河。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这两周家里忙着装修，跑了几次建材市场，每次坐公交来回要花上将近 4</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/LinQ%20%E6%9F%A5%E8%AF%A2%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://1ess.github.io/LinQ%20%E6%9F%A5%E8%AF%A2%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近的工作是对一个复杂数据库进行操作，模型类之间的关系很复杂。操作方式使用了 LINQ，之前一直对 LINQ</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(%E4%B8%80)/"/>
    <id>https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(%E4%B8%80)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;数据结构和算法是计算机软件相关专业的基础课程，要想从事编程工作，无论是否是科班出身，都不可能绕过这部分知识。&lt;br&gt;从本篇开始，我会详细的复习一遍数据结构以及算法。&lt;/p&gt;
&lt;h2 id=&quot;数据结构&quot;&gt;&lt;a href=&quot;#数据结构&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(%E4%BA%8C)/"/>
    <id>https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(%E4%BA%8C)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们将会复习一下比较简单但是应用非常广泛的一种数据结构 —— 线性表。&lt;/p&gt;
&lt;h2 id=&quot;线性表&quot;&gt;&lt;a href=&quot;#线性表&quot; class=&quot;headerlink&quot; title=&quot;线性表&quot;&gt;&lt;/a&gt;线性表&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;线性表(List):</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(%E4%B8%89)/"/>
    <id>https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(%E4%B8%89)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们将会复习一下基于线性表衍生出的两种数据结构 —— 栈和队列。&lt;/p&gt;
&lt;h2 id=&quot;栈-Stack&quot;&gt;&lt;a href=&quot;#栈-Stack&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(%E5%9B%9B)/"/>
    <id>https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(%E5%9B%9B)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们来讨论一种一对多的数据结构 —— 树。&lt;/p&gt;
&lt;h2 id=&quot;树-Tree&quot;&gt;&lt;a href=&quot;#树-Tree&quot; class=&quot;headerlink&quot; title=&quot;树(Tree)&quot;&gt;&lt;/a&gt;树(Tree)&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;概述&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(%E4%BA%94)/"/>
    <id>https://1ess.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(%E4%BA%94)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇，我们来讨论一种多对多的数据结构 —— 图。&lt;/p&gt;
&lt;h2 id=&quot;图的定义&quot;&gt;&lt;a href=&quot;#图的定义&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/%E7%AE%97%E6%B3%95(%E4%B8%80)/"/>
    <id>https://1ess.github.io/%E7%AE%97%E6%B3%95(%E4%B8%80)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇开始，我们来看看在工作中比较常用的两大算法之一的&lt;strong&gt;查找&lt;/strong&gt;算法。&lt;/p&gt;
&lt;h2 id=&quot;概论&quot;&gt;&lt;a href=&quot;#概论&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/%E7%AE%97%E6%B3%95(%E4%BA%8C)/"/>
    <id>https://1ess.github.io/%E7%AE%97%E6%B3%95(%E4%BA%8C)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇开始，我们来看看在工作中比较常用的两大算法之一的&lt;strong&gt;排序&lt;/strong&gt;算法。&lt;/p&gt;
&lt;h2 id=&quot;基本概念及分类&quot;&gt;&lt;a href=&quot;#基本概念及分类&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1ess.github.io/MySQL(%E4%B8%80)/"/>
    <id>https://1ess.github.io/MySQL(%E4%B8%80)/</id>
    <published>2021-07-14T13:14:49.274Z</published>
    <updated>2021-07-14T13:14:49.274Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;从本篇开始，我们来说说最流行的数据库 —— 关于 MySQL 的那些事儿。&lt;/p&gt;
&lt;h2 id=&quot;数据库概念&quot;&gt;&lt;a href=&quot;#数据库概念&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
