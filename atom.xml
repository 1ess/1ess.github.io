<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A Sort Of A Blog</title>
  
  
  <link href="https://1ess.github.io/atom.xml" rel="self"/>
  
  <link href="https://1ess.github.io/"/>
  <updated>2022-02-07T14:03:31.617Z</updated>
  <id>https://1ess.github.io/</id>
  
  <author>
    <name>Stephen Chang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设计模式-抽象工厂</title>
    <link href="https://1ess.github.io/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/"/>
    <id>https://1ess.github.io/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/</id>
    <published>2022-02-15T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;抽象工厂模式(Abstract Factory Pattern)是一种创建型设计模式，它能创建一系列相关的对象，而无需指定其具体类。&lt;/p&gt;
&lt;h2 id=&quot;解释&quot;&gt;&lt;a href=&quot;#解释&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>设计模式-工厂方法</title>
    <link href="https://1ess.github.io/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95/"/>
    <id>https://1ess.github.io/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95/</id>
    <published>2022-02-14T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;工厂方法模式(Factory Method Pattern)是一种创建型设计模式，其在父类中提供一个创建对象的方法，允许子类决定实例化对象的类型。&lt;/p&gt;
&lt;h2 id=&quot;解释&quot;&gt;&lt;a href=&quot;#解释&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>设计模式-概述</title>
    <link href="https://1ess.github.io/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%A6%82%E8%BF%B0/"/>
    <id>https://1ess.github.io/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%A6%82%E8%BF%B0/</id>
    <published>2022-02-13T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;设计模式是软件设计中常见问题的典型解决方案。设计模式与方法或库的使用方式不同，你很难直接在自己的程序中套用某个设计模式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模式并不是一段特定的代码，而是解决特定问题的一般性概念。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你可以根据模式来实现符合自己程序</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Synchronous and Asynchronous Blocking and Non-Blocking</title>
    <link href="https://1ess.github.io/Synchronous%20and%20Asynchronous%20Blocking%20and%20Non-Blocking/"/>
    <id>https://1ess.github.io/Synchronous%20and%20Asynchronous%20Blocking%20and%20Non-Blocking/</id>
    <published>2022-02-12T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;概念解释&quot;&gt;&lt;a href=&quot;#概念解释&quot; class=&quot;headerlink&quot; title=&quot;概念解释&quot;&gt;&lt;/a&gt;概念解释&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;在软件开发中，这两对概念是非常容易搞混的。我们再此给其做一个明确的解释，用以区分:</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SQL 经典练习题</title>
    <link href="https://1ess.github.io/SQL%20%E7%BB%8F%E5%85%B8%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    <id>https://1ess.github.io/SQL%20%E7%BB%8F%E5%85%B8%E7%BB%83%E4%B9%A0%E9%A2%98/</id>
    <published>2022-02-10T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;数据准备&quot;&gt;&lt;a href=&quot;#数据准备&quot; class=&quot;headerlink&quot; title=&quot;数据准备&quot;&gt;&lt;/a&gt;数据准备&lt;/h3&gt;&lt;p&gt;1.学生表&lt;br&gt;2.课程表&lt;br&gt;3.教师表&lt;br&gt;4.成绩表&lt;/p&gt;
&lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>『数据密集型应用系统设计』读书笔记(十一)</title>
    <link href="https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E5%8D%81%E4%B8%80)/"/>
    <id>https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E5%8D%81%E4%B8%80)/</id>
    <published>2022-02-05T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;上一章讨论了批处理技术，它是读取一组文件作为输入并生成一组新的输出文件的技术，其中始终存在一个重要的假设即&lt;strong&gt;输入是有界的&lt;/strong&gt;。而本章中，我们将转向流处理，其中输入是无界的。也就是说，作业的输入是永无止境的数据流。&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>『数据密集型应用系统设计』读书笔记(十)</title>
    <link href="https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E5%8D%81)/"/>
    <id>https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E5%8D%81)/</id>
    <published>2022-02-04T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Web 和越来越多基于 HTTP/REST 的 API 使得请求/响应的交互模式变得普遍，但是这并不是系统的唯一类型。存在三种不同类型的系统: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在线服务(在线系统):</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>『数据密集型应用系统设计』读书笔记(九)</title>
    <link href="https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E4%B9%9D)/"/>
    <id>https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E4%B9%9D)/</id>
    <published>2022-02-03T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本章我们将讨论构建容错式分布式系统的相关算法和协议。为了构建容错系统，最好先建立一套通用的抽象机制和与之对应的技术保证，这样只需实现一次，其上的各种应用程序都可以安全地信赖底层的保证。&lt;/p&gt;
&lt;p&gt;分布式系统最重要的抽象之一就是&lt;strong&gt;共识&lt;/strong&gt;，也就</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>『数据密集型应用系统设计』读书笔记(八)</title>
    <link href="https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E5%85%AB)/"/>
    <id>https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E5%85%AB)/</id>
    <published>2022-02-02T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;分布式系统与在单节点上的软件有着非常显著的区别，你会碰到五花八门、千奇百怪的问题所导致的各种故障。本章我们将了解这些实践中所出现的问题，充分认识眼前的挑战。&lt;/p&gt;
&lt;p&gt;作为开发者，我们的核心任务是&lt;strong&gt;构建可靠的系统&lt;/strong&gt;，即使系统面临各种出错可能</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>『数据密集型应用系统设计』读书笔记(七)</title>
    <link href="https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E4%B8%83)/"/>
    <id>https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E4%B8%83)/</id>
    <published>2022-01-30T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在一个苛刻的数据存储环境中，会有许多可能出错的情况:</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>『数据密集型应用系统设计』读书笔记(六)</title>
    <link href="https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E5%85%AD)/"/>
    <id>https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E5%85%AD)/</id>
    <published>2022-01-28T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前一章我们讨论了复制技术，即在不同节点上保存相同数据的多个副本。然而，面对一些海量数据集或非常高的查询压力，复制技术还不够，我们还需要将数据拆分成为&lt;strong&gt;分区&lt;/strong&gt;(也称为分片)。&lt;/p&gt;
&lt;p&gt;注意: 关于分区，在不同系统有不同称呼。例如</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>『数据密集型应用系统设计』读书笔记(五)</title>
    <link href="https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E4%BA%94)/"/>
    <id>https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E4%BA%94)/</id>
    <published>2021-12-26T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在前面几章，我们讨论了数据系统的各个方面，但仅限于数据存储在单台机器上的情况。现在我们进入更高的层次，在接下来的几章讨论将数据库分布到多台机器的情况。&lt;/p&gt;
&lt;h2 id=&quot;复制&quot;&gt;&lt;a href=&quot;#复制&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>『数据密集型应用系统设计』读书笔记(四)</title>
    <link href="https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E5%9B%9B)/"/>
    <id>https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E5%9B%9B)/</id>
    <published>2021-12-20T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;编码与演化&quot;&gt;&lt;a href=&quot;#编码与演化&quot; class=&quot;headerlink&quot; title=&quot;编码与演化&quot;&gt;&lt;/a&gt;编码与演化&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;在大多数情况下，修改应用程序的功能也意味着需要更改其存储的数据:</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>『数据密集型应用系统设计』读书笔记(三)</title>
    <link href="https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E4%B8%89)/"/>
    <id>https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E4%B8%89)/</id>
    <published>2021-12-19T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;一个数据库在最基础的层次上需要完成两件事情:</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>『数据密集型应用系统设计』读书笔记(二)</title>
    <link href="https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E4%BA%8C)/"/>
    <id>https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E4%BA%8C)/</id>
    <published>2021-12-18T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;语言的边界就是世界的边界。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在本章中，我们将研究一系列用于数据存储和查询的通用数据模型。特别地，我们将比较关系模型，文档模型和少量基于图形的数据模型。我们还将查看各种查询语言并比较它们的用例。&lt;/p&gt;
&lt;h</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>『数据密集型应用系统设计』读书笔记(一)</title>
    <link href="https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E4%B8%80)/"/>
    <id>https://1ess.github.io/%E3%80%8E%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(%E4%B8%80)/</id>
    <published>2021-12-15T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这本书一直在我的待读列表，但是一直没有机会拜读，直到最近 2021 年已经快要过去，感觉需要在年末提升一下自己。边读边做一下笔记，留待后用。&lt;/p&gt;
&lt;h3 id=&quot;数据密集型与计算密集型&quot;&gt;&lt;a href=&quot;#数据密集型与计算密集型&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>锁</title>
    <link href="https://1ess.github.io/%E9%94%81/"/>
    <id>https://1ess.github.io/%E9%94%81/</id>
    <published>2021-10-18T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;锁在并发编程中扮演着非常重要的角色，本篇，我将梳理各种锁分类的概念以及各种锁实现类之间的区别与联系。&lt;/p&gt;
&lt;h2 id=&quot;为什么要有锁&quot;&gt;&lt;a href=&quot;#为什么要有锁&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>虚拟化</title>
    <link href="https://1ess.github.io/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    <id>https://1ess.github.io/%E8%99%9A%E6%8B%9F%E5%8C%96/</id>
    <published>2021-08-16T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;今天给公司搭建虚拟化平台，对其中用到的一些知识进行整理。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果没有虚拟化，就不可能有云计算。而如果没有 Hypervisor，则不可能有虚拟化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;何为-Hypervisor&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>出差</title>
    <link href="https://1ess.github.io/%E5%87%BA%E5%B7%AE/"/>
    <id>https://1ess.github.io/%E5%87%BA%E5%B7%AE/</id>
    <published>2021-07-11T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;苏州&quot;&gt;&lt;a href=&quot;#苏州&quot; class=&quot;headerlink&quot; title=&quot;苏州&quot;&gt;&lt;/a&gt;苏州&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;京杭大运河&quot;&gt;&lt;a href=&quot;#京杭大运河&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>大连之行</title>
    <link href="https://1ess.github.io/%E5%A4%A7%E8%BF%9E%E4%B9%8B%E8%A1%8C/"/>
    <id>https://1ess.github.io/%E5%A4%A7%E8%BF%9E%E4%B9%8B%E8%A1%8C/</id>
    <published>2021-05-06T00:00:00.000Z</published>
    <updated>2022-02-07T14:03:31.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;大连&quot;&gt;&lt;a href=&quot;#大连&quot; class=&quot;headerlink&quot; title=&quot;大连&quot;&gt;&lt;/a&gt;大连&lt;/h3&gt;&lt;hr&gt;
&lt;h3 id=&quot;金石滩&quot;&gt;&lt;a href=&quot;#金石滩&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
